#lang racket
(define a (list 1 2 3))
(define b a)
(define c (list 1 2 3))
(define x '#\a)
(define y '#\a)
(define z '#\b)
;eq? Objektvergleich
(eq? 3 3)
(eq? '#\a '#\a)
(eq? a a)
(eq? a b)
(eq? a c)
(eq? x x)
(eq? x y)
(eq? x z)
;eqv? Objektvergleich
(eqv? 3 3)
(eqv? '#\a '#\a)
(eqv? a a)
(eqv? a b)
(eqv? a c)
(eqv? x x)
(eqv? x y)
(eqv? x z)
;equal? Objektvergleich
(equal? 3 3)
(equal? '#\a '#\a)
(equal? a a)
(equal? a b)
(equal? a c)
(equal? x x)
(equal? x y)
(equal? x z)
